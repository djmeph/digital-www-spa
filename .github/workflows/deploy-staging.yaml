name: Deploy Staging App
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and push image
    runs-on: arc-runner-set

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: djmeph
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app
        shell: bash
        run: |
          yarn install
          yarn nx run digital-www:build:production
          sed -i 's/SERVICE_WORKER_CACHE_ID/${{ github.sha }}/g' dist/apps/digital-www/public/sw.js

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/digital-www/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/djmeph/lof-digital-www
          cache-from: type=registry,ref=ghcr.io/djmeph/lof-digital-www:buildcache
          cache-to: type=registry,ref=ghcr.io/djmeph/lof-digital-www:buildcache,mode=max
          provenance: false

      - name: Store build hash as artifact
        shell: bash
        run: echo "digest=${{ steps.build.outputs.digest }}" > hash.txt

      - name: Archive build hash
        uses: actions/upload-artifact@v4
        with:
          name: build-hash
          path: hash.txt
          retention-days: 90

  deploy:
    name: Deploy
    runs-on: arc-runner-set
    environment: production

    steps:
      - name: Retrieve build hash
        uses: actions/download-artifact@v4
        with:
          name: build-hash

      - name: Extract build hash to output
        id: build
        shell: bash
        run: cat hash.txt >> $GITHUB_OUTPUT

      - name: Deploy to Kubernetes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: patch deployment staging-digital-www-2024 -n lof -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"digital-www\",\"image\":\"ghcr.io/djmeph/lof-digital-www:latest@${{ steps.build.outputs.digest }}\"}]}}}}"
